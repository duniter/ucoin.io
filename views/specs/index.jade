.ui.segment.hero
  .container
    .ui.header.large
      i.book.big.icon.medium
      .content Specifications
        .sub.header
          | Technical details about uCoin's protocol and implementation
.main.container
  .ui.segment.body
    .ui.grid.main.stackable
      .row
        .column
          .blue.ui.message.small
            i.icon.attention
            | This section only contains external references
      .row
        .sixteen.wide.column
          .ui.two.column.stackable.grid
            .row
              .column
                :markdown
                  ### [Protocol](https://github.com/ucoin-io/ucoin/blob/master/doc/Protocol.md)
                  This document defines a set of rules a uCoin node follows for creating free currencies in a three step process:

                  #### 1. Documents format
                  The protocol describes a set of documents uCoin nodes will exchange and base their data upon. Documents goes from public keys, identities, memberships & transactions.

                  #### 2. Rules of interpretation
                  The protocol also describes how to interprete documents a node receive, and what are the impacts. This is notably what makes a node able to differenciate a good block from a wrong block, an acceptable transaction from a fake one.

                  #### 3. Currency parameters
                  Because uCoin protocol is a generic protocol, and has only named parameters without precision about its values. These may vary from one currency to another, and will depend on the context & goal of each currency.

              .column
                :markdown
                  ### [HTTP API](https://github.com/ucoin-io/ucoin/blob/master/doc/HTTP_API.md)
                  This document defines an HTTP API implementing UCP through simple HTTP GET/POST methods.

                  #### UCP features:
                  * Allows to receive blocks
                  * Displays current Web of Trust
                  * Displays current blockchain
                  * Allows to receive transactions
                  * Allows to receive network documents (peers, status, ...)
                  * Displays transactions for a given key
                  * Display available certifications
                  * Display available identities
                  * ...

                  #### Special features:

                  * Security & synchronization through Merkle trees
                  * JSON responses
